{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\src\\App.svelte",
    "..\\src\\Chart.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  \r\n  import { scaleLinear } from \"d3-scale\";\r\n  // import { Date } from \"d3-time\"\r\n  import Chart from './Chart.svelte';\r\n  import { onMount } from 'svelte';\r\n  import { selectAll } from 'd3-selection'\r\n  import { drag } from 'd3-drag';\r\n  import queryString from \"query-string\";\r\n  import Checkbox from './Checkbox.svelte';\r\n  import Arrow from './Arrow.svelte';\r\n  import { format } from 'd3-format'\r\n  import { event } from 'd3-selection'\r\n\r\n  import katex from 'katex';\r\n\r\n  const legendheight = 67 \r\n\r\n  function range(n){\r\n    return Array(n).fill().map((_, i) => i);\r\n  }\r\n\r\n  function formatNumber(num) {\r\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n  }\r\n\r\n  var sum = function(arr, bools){\r\n    var x = 0\r\n    for (var i = 0; i < arr.length; i++) {\r\n      x = x + arr[i]*(bools[i] ? 1 : 0)\r\n    }\r\n    return x\r\n  }\r\n\r\n  var Integrators = {\r\n    Euler    : [[1]],\r\n    Midpoint : [[.5,.5],[0, 1]],\r\n    Heun     : [[1, 1],[.5,.5]],\r\n    Ralston  : [[2/3,2/3],[.25,.75]],\r\n    K3       : [[.5,.5],[1,-1,2],[1/6,2/3,1/6]],\r\n    SSP33    : [[1,1],[.5,.25,.25],[1/6,1/6,2/3]],\r\n    SSP43    : [[.5,.5],[1,.5,.5],[.5,1/6,1/6,1/6],[1/6,1/6,1/6,1/2]],\r\n    RK4      : [[.5,.5],[.5,0,.5],[1,0,0,1],[1/6,1/3,1/3,1/6]],\r\n    RK38     : [[1/3,1/3],[2/3,-1/3,1],[1,1,-1,1],[1/8,3/8,3/8,1/8]]\r\n  };\r\n\r\n  // f is a func of time t and state y\r\n  // y is the initial state, t is the time, h is the timestep\r\n  // updated y is returned.\r\n  var integrate=(m,f,y,t,h)=>{\r\n    for (var k=[],ki=0; ki<m.length; ki++) {\r\n      var _y=y.slice(), dt=ki?((m[ki-1][0])*h):0;\r\n      for (var l=0; l<_y.length; l++) for (var j=1; j<=ki; j++) _y[l]=_y[l]+h*(m[ki-1][j])*(k[ki-1][l]);\r\n      k[ki]=f(t+dt,_y,dt); \r\n    }\r\n    for (var r=y.slice(),l=0; l<_y.length; l++) for (var j=0; j<k.length; j++) r[l]=r[l]+h*(k[j][l])*(m[ki-1][j]);\r\n    return r;\r\n  }\r\n\r\n\r\n  $: Time_to_death     = 32\r\n  $: logN              = Math.log(1.85e6)\r\n  $: N                 = Math.exp(logN)\r\n  $: I0                = 1\r\n  $: R0                = 3\r\n  $: D_incbation       = 7       \r\n  $: D_infectious      = 2.9 \r\n  $: D_recovery_mild   = (14 - D_infectious)  \r\n  $: D_recovery_severe = (31.5 - D_infectious)\r\n  $: D_hospital_lag    = 5\r\n  $: D_death           = Time_to_death - D_infectious \r\n  $: CFR               = 0.03  \r\n  $: InterventionTime  = 35  \r\n  $: OMInterventionAmt = 0.6\r\n  $: InterventionAmt   = 1 - OMInterventionAmt\r\n  $: InterventionTime1  = 90  \r\n  $: OMInterventionAmt1 = 0.8\r\n  $: InterventionAmt1   = 1 - OMInterventionAmt1\r\n  $: InterventionTime2  = 150  \r\n  $: OMInterventionAmt2 = 0.6\r\n  $: InterventionAmt2   = 1 - OMInterventionAmt2\r\n  $: Time              = 220\r\n  $: Xmax              = 110000\r\n  $: dt                = 2\r\n  $: P_SEVERE          = 0.2\r\n  $: duration          = 7*12*1e10\r\n\r\n  $: state = location.protocol + '//' + location.host + location.pathname + \"?\" + queryString.stringify({\"Time_to_death\":Time_to_death,\r\n               \"logN\":logN,\r\n               \"I0\":I0,\r\n               \"R0\":R0,\r\n               \"D_incbation\":D_incbation,\r\n               \"D_infectious\":D_infectious,\r\n               \"D_recovery_mild\":D_recovery_mild,\r\n               \"D_recovery_severe\":D_recovery_severe,\r\n               \"CFR\":CFR,\r\n               \"InterventionTime\":InterventionTime,\r\n               \"InterventionAmt\":InterventionAmt,\r\n               \"InterventionTime1\":InterventionTime1,\r\n               \"InterventionAmt1\":InterventionAmt1,\r\n               \"InterventionTime2\":InterventionTime2,\r\n               \"InterventionAmt2\":InterventionAmt2,\r\n               \"D_hospital_lag\":D_hospital_lag,\r\n               \"P_SEVERE\": P_SEVERE})\r\n\t\t\t   \r\n   \r\n// dt, N, I0, R0, D_incbation, D_infectious, D_recovery_mild, D_hospital_lag, D_recovery_severe, D_death, P_SEVERE, CFR, InterventionTime, InterventionAmt, duration\r\n\r\n  function get_solution(dt, N, I0, R0, D_incbation, D_infectious, D_recovery_mild, D_hospital_lag, D_recovery_severe, D_death, P_SEVERE, CFR, InterventionTime, InterventionAmt, InterventionTime1, InterventionAmt1, InterventionTime2, InterventionAmt2, duration) {\r\n\tvar interpolation_steps = 40\r\n    var steps = 110*interpolation_steps\r\n    var dt = dt/interpolation_steps\r\n    var sample_step = interpolation_steps\r\n\r\n    var method = Integrators[\"RK4\"]\r\n    function f(t, x){\r\n\r\n      // SEIR ODE\r\n      if (t > InterventionTime2 && t < InterventionTime2 + duration){\r\n        var beta = (InterventionAmt2)*R0/(D_infectious)\r\n      } else if (t > InterventionTime1 && t < InterventionTime1 + duration){\r\n        var beta = (InterventionAmt1)*R0/(D_infectious)\r\n      } else if (t > InterventionTime && t < InterventionTime + duration){\r\n        var beta = (InterventionAmt)*R0/(D_infectious)\r\n      } else if (t > InterventionTime2 + duration) {\r\n        var beta = 0.5*R0/(D_infectious)        \r\n      } else {\r\n        var beta = R0/(D_infectious)\r\n      }\r\n      var a     = 1/D_incbation\r\n      var gamma = 1/D_infectious\r\n      \r\n      var S        = x[0] // Susectable\r\n      var E        = x[1] // Exposed\r\n      var I        = x[2] // Infectious \r\n      var Mild     = x[3] // Recovering (Mild)     \r\n      var Severe   = x[4] // Recovering (Severe at home)\r\n      var Severe_H = x[5] // Recovering (Severe in hospital)\r\n      var Fatal    = x[6] // Recovering (Fatal)\r\n      var R_Mild   = x[7] // Recovered\r\n      var R_Severe = x[8] // Recovered\r\n      var R_Fatal  = x[9] // Dead\r\n\r\n      var p_severe = P_SEVERE\r\n      var p_fatal  = CFR\r\n      var p_mild   = 1 - P_SEVERE - CFR\r\n\r\n      var dS        = -beta*I*S\r\n      var dE        =  beta*I*S - a*E\r\n      var dI        =  a*E - gamma*I\r\n      var dMild     =  p_mild*gamma*I   - (1/D_recovery_mild)*Mild\r\n      var dSevere   =  p_severe*gamma*I - (1/D_hospital_lag)*Severe\r\n      var dSevere_H =  (1/D_hospital_lag)*Severe - (1/D_recovery_severe)*Severe_H\r\n      var dFatal    =  p_fatal*gamma*I  - (1/D_death)*Fatal\r\n      var dR_Mild   =  (1/D_recovery_mild)*Mild\r\n      var dR_Severe =  (1/D_recovery_severe)*Severe_H\r\n      var dR_Fatal  =  (1/D_death)*Fatal\r\n\r\n      //      0   1   2   3      4        5          6       7        8          9\r\n      return [dS, dE, dI, dMild, dSevere, dSevere_H, dFatal, dR_Mild, dR_Severe, dR_Fatal]\r\n    }\r\n\r\n    var v = [1 - I0/N, 0, I0/N, 0, 0, 0, 0, 0, 0, 0]\r\n    var t = 0\r\n\r\n    var P  = []\r\n    var TI = []\r\n    var Iters = []\r\n    while (steps--) { \r\n      if ((steps+1) % (sample_step) == 0) {\r\n            //    Dead   Hospital          Recovered        Infectious   Exposed\r\n        P.push([ N*v[9], N*(v[5]+v[6]),  N*(v[7] + v[8]), N*v[2],    N*v[1] ])\r\n        Iters.push(v)\r\n        TI.push(N*(1-v[0]))\r\n        // console.log((v[0] + v[1] + v[2] + v[3] + v[4] + v[5] + v[6] + v[7] + v[8] + v[9]))\r\n        // console.log(v[0] , v[1] , v[2] , v[3] , v[4] , v[5] , v[6] , v[7] , v[8] , v[9])\r\n      }\r\n      v =integrate(method,f,v,t,dt); \r\n      t+=dt\r\n    }\r\n    return {\"P\": P, \r\n            \"deaths\": N*v[6], \r\n            \"total\": 1-v[0],\r\n            \"total_infected\": TI,\r\n            \"Iters\":Iters,\r\n            \"dIters\": f}\r\n  }\r\n\r\n  function max(P, checked) {\r\n    return P.reduce((max, b) => Math.max(max, sum(b, checked) ), sum(P[0], checked) )\r\n  }\r\n\r\n  $: Sol            = get_solution(dt, N, I0, R0, D_incbation, D_infectious, D_recovery_mild, D_hospital_lag, D_recovery_severe, D_death, P_SEVERE, CFR, InterventionTime, InterventionAmt, InterventionTime1, InterventionAmt1, InterventionTime2, InterventionAmt2, duration)\r\n  $: P              = Sol[\"P\"].slice(0,100)\r\n  $: timestep       = dt\r\n  $: tmax           = dt*100\r\n  $: deaths         = Sol[\"deaths\"]\r\n  $: total          = Sol[\"total\"]\r\n  $: total_infected = Sol[\"total_infected\"].slice(0,100)\r\n  $: Iters          = Sol[\"Iters\"]\r\n  $: dIters         = Sol[\"dIters\"]\r\n  $: Pmax           = max(P, checked)\r\n  $: lock           = false\r\n\r\n  var colors = [ \"#386cb0\", \"#8da0cb\", \"#4daf4a\", \"#f0027f\", \"#fdc086\"]\r\n\r\n  var Plock = 1\r\n\r\n  var drag_y = function (){\r\n    var dragstarty = 0\r\n    var Pmaxstart = 0\r\n\r\n    var dragstarted = function (d) {\r\n      dragstarty = event.y  \r\n      Pmaxstart  = Pmax\r\n    }\r\n\r\n    var dragged = function (d) {\r\n      Pmax = Math.max( (Pmaxstart*(1 + (event.y - dragstarty)/500)), 10)\r\n    }\r\n\r\n    return drag().on(\"drag\", dragged).on(\"start\", dragstarted)\r\n  }\r\n\r\n  var drag_x = function (){\r\n    var dragstartx = 0\r\n    var dtstart = 0\r\n    var Pmaxstart = 0\r\n    var dragstarted = function (d) {\r\n      dragstartx = event.x\r\n      dtstart  = dt\r\n      Plock = Pmax\r\n      lock = true\r\n    }\r\n    var dragged = function (d) {\r\n      dt = dtstart - 0.0015*(event.x - dragstartx)\r\n    }\r\n    var dragend = function (d) {\r\n      lock = false\r\n    }\r\n    return drag().on(\"drag\", dragged).on(\"start\", dragstarted).on(\"end\", dragend)\r\n  }\r\n\r\n  var drag_intervention = function (){\r\n    var dragstarty = 0\r\n    var InterventionTimeStart = 0\r\n\r\n    var dragstarted = function (d) {\r\n      dragstarty = event.x  \r\n      InterventionTimeStart = InterventionTime\r\n      Plock = Pmax\r\n      lock = true\r\n    }\r\n\r\n    var dragged = function (d) {\r\n      // InterventionTime = Math.max( (*(1 + (event.x - dragstarty)/500)), 10)\r\n      // console.log(event.x)\r\n      InterventionTime = Math.min(tmax-1, Math.max(0, InterventionTimeStart + xScaleTimeInv(event.x - dragstarty)), InterventionTime1)\r\n    }\r\n\r\n    var dragend = function (d) {\r\n      lock = false\r\n    }\r\n\r\n    return drag().on(\"drag\", dragged).on(\"start\", dragstarted).on(\"end\", dragend)\r\n  }\r\n  \r\n  var drag_intervention1 = function (){\r\n    var dragstarty = 0\r\n    var InterventionTimeStart = 0\r\n\r\n    var dragstarted = function (d) {\r\n      dragstarty = event.x  \r\n      InterventionTimeStart = InterventionTime1\r\n      Plock = Pmax\r\n      lock = true\r\n    }\r\n\r\n    var dragged = function (d) {\r\n      // InterventionTime = Math.max( (*(1 + (event.x - dragstarty)/500)), 10)\r\n      // console.log(event.x)\r\n      InterventionTime1 = Math.min(tmax-1, Math.max(InterventionTime, InterventionTimeStart + xScaleTimeInv(event.x - dragstarty)), InterventionTime2)\r\n    }\r\n\r\n    var dragend = function (d) {\r\n      lock = false\r\n    }\r\n\r\n    return drag().on(\"drag\", dragged).on(\"start\", dragstarted).on(\"end\", dragend)\r\n  }\r\n  \r\n  var drag_intervention2 = function (){\r\n    var dragstarty = 0\r\n    var InterventionTimeStart = 0\r\n\r\n    var dragstarted = function (d) {\r\n      dragstarty = event.x  \r\n      InterventionTimeStart = InterventionTime2\r\n      Plock = Pmax\r\n      lock = true\r\n    }\r\n\r\n    var dragged = function (d) {\r\n      // InterventionTime = Math.max( (*(1 + (event.x - dragstarty)/500)), 10)\r\n      // console.log(event.x)\r\n      InterventionTime2 = Math.min(tmax-1, Math.max(InterventionTime1, InterventionTimeStart + xScaleTimeInv(event.x - dragstarty)))\r\n    }\r\n\r\n    var dragend = function (d) {\r\n      lock = false\r\n    }\r\n\r\n    return drag().on(\"drag\", dragged).on(\"start\", dragstarted).on(\"end\", dragend)\r\n  }\r\n\r\n\r\n  var drag_intervention_end = function (){\r\n  console.log('dragend');\r\n    var dragstarty = 0\r\n    var durationStart = 0\r\n\r\n    var dragstarted = function (d) {\r\n      dragstarty = event.x  \r\n      durationStart = duration\r\n      Plock = Pmax\r\n      lock = true\r\n    }\r\n\r\n    var dragged = function (d) {\r\n      // InterventionTime = Math.max( (*(1 + (event.x - dragstarty)/500)), 10)\r\n      // console.log(event.x)\r\n      duration = Math.min(tmax-1, Math.max(0, durationStart + xScaleTimeInv(event.x - dragstarty)))\r\n    }\r\n\r\n    var dragend = function (d) {\r\n      lock = false\r\n    }\r\n\r\n    return drag().on(\"drag\", dragged).on(\"start\", dragstarted).on(\"end\", dragend)\r\n  }\r\n\r\n\r\n  $: parsed = \"\";\r\n  onMount(async () => {\r\n    var drag_callback_y = drag_y()\r\n    drag_callback_y(selectAll(\"#yAxisDrag\"))\r\n    var drag_callback_x = drag_x()\r\n    drag_callback_x(selectAll(\"#xAxisDrag\"))\r\n    var drag_callback_intervention = drag_intervention()\r\n    drag_callback_intervention(selectAll(\"#intervention\"))\r\n\tvar drag_callback_intervention1 = drag_intervention1()\r\n    drag_callback_intervention1(selectAll(\"#intervention1\"))\r\n\tvar drag_callback_intervention2 = drag_intervention2()\r\n    drag_callback_intervention2(selectAll(\"#intervention2\"))\r\n\t\r\n    // var drag_callback_intervention_end = drag_intervention_end()\r\n    // drag_callback_intervention_end(selectAll(\"#dottedline2\"))\r\n\r\n    if (typeof window !== 'undefined') {\r\n      parsed = queryString.parse(window.location.search)\r\n\t  \r\n      if (!(parsed.logN === undefined)) {logN = parsed.logN}\r\n      if (!(parsed.I0 === undefined)) {I0 = parseFloat(parsed.I0)}\r\n      if (!(parsed.R0 === undefined)) {R0 = parseFloat(parsed.R0)}\r\n      if (!(parsed.D_incbation === undefined)) {D_incbation = parseFloat(parsed.D_incbation)}\r\n      if (!(parsed.D_infectious === undefined)) {D_infectious = parseFloat(parsed.D_infectious)}\r\n      if (!(parsed.D_recovery_mild === undefined)) {D_recovery_mild = parseFloat(parsed.D_recovery_mild)}\r\n      if (!(parsed.D_recovery_severe === undefined)) {D_recovery_severe = parseFloat(parsed.D_recovery_severe)}\r\n      if (!(parsed.CFR === undefined)) {CFR = parseFloat(parsed.CFR)}\r\n      if (!(parsed.InterventionTime === undefined)) {InterventionTime = parseFloat(parsed.InterventionTime)}\r\n      if (!(parsed.InterventionAmt === undefined)) {InterventionAmt = parseFloat(parsed.InterventionAmt)}\r\n\t  if (!(parsed.InterventionTime1 === undefined)) {InterventionTime1 = parseFloat(parsed.InterventionTime1)}\r\n      if (!(parsed.InterventionAmt1 === undefined)) {InterventionAmt1 = parseFloat(parsed.InterventionAmt1)}\r\n\t  if (!(parsed.InterventionTime2 === undefined)) {InterventionTime2 = parseFloat(parsed.InterventionTime2)}\r\n      if (!(parsed.InterventionAmt2 === undefined)) {InterventionAmt2 = parseFloat(parsed.InterventionAmt2)}\r\n      if (!(parsed.D_hospital_lag === undefined)) {D_hospital_lag = parseFloat(parsed.D_hospital_lag)}\r\n      if (!(parsed.P_SEVERE === undefined)) {P_SEVERE = parseFloat(parsed.P_SEVERE)}\r\n      if (!(parsed.Time_to_death === undefined)) {Time_to_death = parseFloat(parsed.Time_to_death)}\r\n\r\n    }\r\n  });\r\n\r\n  function lock_yaxis(){\r\n    Plock = Pmax\r\n    lock  = true\r\n  }\r\n\r\n  function unlock_yaxis(){\r\n    lock = false\r\n  }\r\n\r\n  const padding = { top: 20, right: 0, bottom: 20, left: 25 };\r\n\r\n  let width  = 750;\r\n  let height = 400;\r\n\r\n  $: xScaleTime = scaleLinear()\r\n    .domain([0, tmax])\r\n    .range([padding.left, width - padding.right]);\r\n\r\n  $: xScaleTimeInv = scaleLinear()\r\n    .domain([0, width])\r\n    .range([0, tmax]);\r\n\r\n  $: indexToTime = scaleLinear()\r\n    .domain([0, P.length])\r\n    .range([0, tmax])\r\n\r\n  window.addEventListener('mouseup', unlock_yaxis);\r\n\r\n  $: checked = [true, true, false, true, true]\r\n  $: active  = 0\r\n  $: active_ = active >= 0 ? active : Iters.length - 1\r\n\r\n  var Tinc_s = \"\\\\color{#CCC}{T^{-1}_{\\\\text{inc}}} \"\r\n  var Tinf_s = \"\\\\color{#CCC}{T^{-1}_{\\\\text{inf}}}\"\r\n  var Rt_s   = \"\\\\color{#CCC}{\\\\frac{\\\\mathcal{R}_{t}}{T_{\\\\text{inf}}}} \"\r\n  $: ode_eqn = katex.renderToString(\"\\\\frac{d S}{d t}=-\" +Rt_s +\"\\\\cdot IS,\\\\qquad \\\\frac{d E}{d t}=\" +Rt_s +\"\\\\cdot IS- \" + Tinc_s + \" E,\\\\qquad \\\\frac{d I}{d t}=\" + Tinc_s + \"E-\" + Tinf_s+ \"I, \\\\qquad \\\\frac{d R}{d t}=\" + Tinf_s+ \"I\", {\r\n    throwOnError: false,\r\n    displayMode: true,\r\n    colorIsTextColor: true\r\n  });\r\n\r\n  function math_inline(str) {\r\n    return katex.renderToString(str, {\r\n    throwOnError: false,\r\n    displayMode: false,\r\n    colorIsTextColor: true\r\n    });\r\n  }\r\n\r\n  function math_display(str) {\r\n    return katex.renderToString(str, {\r\n    throwOnError: false,\r\n    displayMode: true,\r\n    colorIsTextColor: true\r\n    });\r\n  }\r\n  \r\n  $: p_num_ind = 40\r\n\r\n  $: get_d = function(i){\r\n    return dIters(indexToTime(i), Iters[i])\r\n  }\r\n\r\n  function get_milestones(P){\r\n\r\n    function argmax(x, index) {\r\n      return x.map((x, i) => [x[index], i]).reduce((r, a) => (a[0] > r[0] ? a : r))[1];\r\n    }\r\n\r\n     //    Dead   Hospital          Recovered        Infectious   Exposed\r\n\t console.log(P);\r\n    var milestones = []\r\n\tvar firtDeathFound = false;\r\n\tvar infectionEndDateFound = false;\r\n    for (var i = 0; i < P.length; i++) {\r\n      if (!firtDeathFound && P[i][0] >= 0.5) {\r\n        milestones.push([i*dt, \"Первая смерть\"]);\r\n\t\tfirtDeathFound = true;\r\n      }\r\n\t  \r\n\t  if (!infectionEndDateFound && P[i][3] < 0.5) {\r\n        milestones.push([i*dt, \"Инфицирование остановлено\"])\r\n\t\tinfectionEndDateFound = true;\r\n      }\r\n    }\r\n\r\n    var i = argmax(P, 1)\r\n    milestones.push([i*dt, \"Пик: \" + format(\",\")(Math.round(P[i][1])) + \" госпитализировано\"])\r\n\r\n    return milestones\r\n  }\r\n\r\n  $: milestones = get_milestones(P)\r\n  $: log = true\r\n\r\n</script>\r\n\r\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/katex.css\" integrity=\"sha384-bsHo4/LA+lkZv61JspMDQB9QP1TtO4IgOf2yYS+J6VdAYLVyx1c3XKcsHh0Vy8Ws\" crossorigin=\"anonymous\">\r\n\r\n<style>\r\n  .small { font: italic 6px Source Code Pro; }\r\n  @import url('https://fonts.googleapis.com/css?family=Source+Code+Pro&display=swap');\r\n\r\n\r\n  h2 {\r\n    margin: auto;\r\n    width: 950px;\r\n    font-size: 40px;\r\n    padding-top: 20px;\r\n    padding-bottom: 20px;\r\n    font-weight: 300;\r\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\r\n    padding-bottom: 30px\r\n  }\r\n\r\n  .center {\r\n    margin: auto;\r\n    width: 950px;\r\n    padding-bottom: 20px;\r\n    font-weight: 300;\r\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\r\n    color:#666;\r\n    font-size: 16.5px;\r\n    text-align: justify;\r\n    line-height: 24px\r\n  }\r\n\r\n  .ack {\r\n    margin: auto;\r\n    width: 950px;\r\n    padding-bottom: 20px;\r\n    font-weight: 300;\r\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\r\n    color:#333;\r\n    font-size: 13px;\r\n  }\r\n\r\n  .row {\r\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\r\n    margin: auto;\r\n    display: flex;\r\n    width: 948px;\r\n    font-size: 13px;\r\n  }\r\n\r\n  .caption {\r\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\r\n    font-size: 13px;    \r\n  }\r\n\r\n  .column {\r\n    flex: 158px;\r\n    padding: 0px 5px 5px 0px;\r\n    margin: 0px 5px 5px 5px;\r\n    /*border-top: 2px solid #999*/\r\n  }\r\n\r\n  .minorTitle {\r\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\r\n    margin: auto;\r\n    display: flex;\r\n    width: 950px;\r\n    font-size: 17px;\r\n    color: #666;\r\n  }\r\n\r\n  .minorTitleColumn{\r\n    flex: 60px;\r\n    padding: 3px;\r\n    border-bottom: 2px solid #999;\r\n  }\r\n\r\n\r\n  .paneltext{\r\n    position:relative;\r\n    height:130px;\r\n  }\r\n\r\n  .paneltitle{\r\n    color:#777; \r\n    line-height: 17px; \r\n    padding-bottom: 4px;\r\n    font-weight: 700;\r\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\r\n  }\r\n\r\n  .paneldesc{\r\n    color:#888; \r\n    text-align: left;\r\n    font-weight: 300;\r\n  }\r\n\r\n  .slidertext{\r\n    color:#555; \r\n    line-height: 7px; \r\n    padding-bottom: 0px; \r\n    padding-top: 7px;\r\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\r\n    font-family: 'Source Code Pro', monospace;\r\n    font-size: 10px;\r\n    text-align: right;\r\n    /*font-weight: bold*/\r\n  }\r\n    \r\n  .range {\r\n    width: 100%;\r\n  }\r\n\r\n  .chart {\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    padding-top:0px;\r\n    padding-bottom:10px;\r\n  }\r\n\r\n  .legend {\r\n    color: #888;\r\n    font-family: Helvetica, Arial;\r\n    font-size: .725em;\r\n    font-weight: 200;\r\n    height: 100px;\r\n    left: 20px;\r\n    top: 4px;\r\n    position: absolute;\r\n  }\r\n\r\n  .legendtitle {\r\n    color:#777; \r\n    font-size:13px;\r\n    padding-bottom: 6px;\r\n    font-weight: 600;\r\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\r\n  }\r\n\r\n\r\n  .legendtext{\r\n    color:#888; \r\n    font-size:13px;\r\n    padding-bottom: 5px;\r\n    font-weight: 300;\r\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\r\n    line-height: 14px;\r\n  }\r\n\r\n  .legendtextnum{\r\n    color:#888; \r\n    font-size:13px;\r\n    padding-bottom: 5px;\r\n    font-weight: 300;\r\n    line-height: 12px;\r\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\r\n    left: -3px;\r\n    position: relative;\r\n  }\r\n\r\n  .tick {\r\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\r\n    font-size: .725em;\r\n    font-weight: 200;\r\n    font-size: 13px\r\n  }\r\n\r\n  td { \r\n    text-align: left;\r\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\r\n    border-bottom: 1px solid #DDD;\r\n    border-collapse: collapse;\r\n    padding: 3px;\r\n    /*font-size: 14px;*/\r\n  }\r\n\r\n  tr {\r\n    border-collapse: collapse;\r\n    border-spacing: 15px;\r\n  }\r\n\r\n  .eqn {\r\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\r\n    margin: auto;\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    width: 950px;\r\n    column-count: 4;\r\n    font-weight: 300;\r\n    color:#666;\r\n    font-size: 16.5px;\r\n  }\r\n\r\n  th { font-weight: 500; text-align: left; padding-bottom: 5px; vertical-align: text-top;     border-bottom: 1px solid #DDD; }\r\n\r\n  a:link { color: grey; }\r\n  a:visited { color: grey; }\r\n\r\n</style>\r\n\r\n<h2>Прогноз распространения Коронавируса COVID-19 с учетом карантинных мер</h2>\r\n\r\n<div class=\"chart\" style=\"display: flex; max-width: 1120px\">\r\n\r\n  <div style=\"flex: 0 0 270px; width:270px;\">\r\n    <div style=\"position:relative; top:48px; right:-115px\">\r\n      <div class=\"legendtext\" style=\"position:absolute; left:-16px; top:-34px; width:50px; height: 100px; font-size: 13px; line-height:16px; font-weight: normal; text-align: center\"><b>День</b><br> {Math.round(indexToTime(active_))}</div>\r\n\r\n      <!-- Susceptible -->\r\n      <div style=\"position:absolute; left:0px; top:0px; width: 180px; height: 100px\">\r\n\r\n        <span style=\"pointer-events: none\"><Checkbox color=\"#CCC\"/></span>\r\n        <Arrow height=\"41\"/>\r\n\r\n        <div class=\"legend\" style=\"position:absolute;\">\r\n          <div class=\"legendtitle\">Восприимчивы</div>\r\n          <div style=\"padding-top: 5px; padding-bottom: 1px\">\r\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:3px; color:#CCC\">∑</span> <i>{formatNumber(Math.round(N*Iters[active_][0]))} \r\n                                  ({ (100*Iters[active_][0]).toFixed(2) }%)</i></div>\r\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:2px; color:#CCC\">Δ</span> <i>{formatNumber(Math.round(N*get_d(active_)[0]))} / день</i>\r\n                                 </div>\r\n          </div>\r\n        </div>\r\n          <div class=\"legendtext\" style=\"text-align: right; width:105px; left:-111px; top: 4px; position:relative;\">Нет иммунитета к вирусу</div>\r\n\r\n      </div>\r\n\r\n      <!-- Exposed -->\r\n      <div style=\"position:absolute; left:0px; top:{legendheight*1}px; width: 180px; height: 100px\">\r\n\r\n        <Checkbox color=\"{colors[4]}\" bind:checked={checked[4]}/>      \r\n        <Arrow height=\"41\"/>\r\n\r\n        <div class=\"legend\" style=\"position:absolute;\">\r\n          <div class=\"legendtitle\">Заражены</div>\r\n\r\n          <div style=\"padding-top: 5px; padding-bottom: 1px\">\r\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:3px; color:#CCC\">∑</span> <i>{formatNumber(Math.round(N*Iters[active_][1]))} \r\n                                  ({ (100*Iters[active_][1]).toFixed(2) }%)</div>\r\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:2px; color:#CCC\">Δ</span> <i>{formatNumber(Math.round(N*get_d(active_)[1])) } / день</i>\r\n                                 </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"legendtext\" style=\"text-align: right; width:105px; left:-111px; top: 4px; position:relative;\">Заражены, но еще не заразны</div>\r\n\r\n      </div>\r\n\r\n      <!-- Infectious -->\r\n      <div style=\"position:absolute; left:0px; top:{legendheight*2}px; width: 180px; height: 100px\">\r\n\r\n        <Checkbox color=\"{colors[3]}\" bind:checked={checked[3]}/>\r\n        <Arrow height=\"41\"/>   \r\n\r\n        <div class=\"legend\" style=\"position:absolute;\">\r\n          <div class=\"legendtitle\">Заразны</div>\r\n          <div style=\"padding-top: 5px; padding-bottom: 1px\">\r\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:3px; color:#CCC\">∑</span> <i>{formatNumber(Math.round(N*Iters[active_][2]))} \r\n                                  ({ (100*Iters[active_][2]).toFixed(2) }%)</div>\r\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:2px; color:#CCC\">Δ</span> <i>{formatNumber(Math.round(N*get_d(active_)[2])) } / день</i>\r\n                                 </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"legendtext\" style=\"text-align: right; width:105px; left:-111px; top: 4px; position:relative;\">Число <i>активно</i> разносящих инфекцию</div>\r\n\r\n\r\n      </div>\r\n\r\n      <!-- Removed -->\r\n      <div style=\"position:absolute; left:0px; top:{legendheight*3}px; width: 180px; height: 100px\">\r\n\r\n        <Checkbox color=\"grey\" callback={(s) => {checked[1] = s; checked[0] = s; checked[2] = s} }/>\r\n        <Arrow height=\"56\" arrowhead=\"\" dasharray=\"3 2\"/>\r\n\r\n        <div class=\"legend\" style=\"position:absolute;\">\r\n          <div class=\"legendtitle\">Не подвержены</div>\r\n          <div style=\"padding-top: 10px; padding-bottom: 1px\">\r\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:3px; color:#CCC\">∑</span> <i>{formatNumber(Math.round(N* (1-Iters[active_][0]-Iters[active_][1]-Iters[active_][2]) ))} \r\n                                  ({ ((100*(1-Iters[active_][0]-Iters[active_][1]-Iters[active_][2]))).toFixed(2) }%)</div>\r\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:2px; color:#CCC\">Δ</span> <i>{formatNumber(Math.round(N*(get_d(active_)[3]+get_d(active_)[4]+get_d(active_)[5]+get_d(active_)[6]+get_d(active_)[7]) )) } / день</i>\r\n                                 </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"legendtext\" style=\"text-align: right; width:105px; left:-111px; top: 4x; position:relative;\">Число людей с иммунитетом или изолированы</div>\r\n\r\n      </div>\r\n\r\n      <!-- Recovered -->\r\n      <div style=\"position:absolute; left:0px; top:{legendheight*4+14-3}px; width: 180px; height: 100px\">\r\n        <Checkbox color=\"{colors[2]}\" bind:checked={checked[2]}/>\r\n        <Arrow height=\"23\" arrowhead=\"\" dasharray=\"3 2\"/>\r\n        <div class=\"legend\" style=\"position:absolute;\">\r\n          <div class=\"legendtitle\">Вылечились</div>\r\n\r\n          <div style=\"padding-top: 3px; padding-bottom: 1px\">\r\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:3px; color:#CCC\">∑</span> <i>{formatNumber(Math.round(N*(Iters[active_][7]+Iters[active_][8]) ))} \r\n                                  ({ (100*(Iters[active_][7]+Iters[active_][8])).toFixed(2) }%)</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"legendtext\" style=\"text-align: right; width:105px; left:-111px; top: 8px; position:relative;\">Полностью вылечились</div>\r\n\r\n      </div>\r\n\r\n      <!-- Hospitalized -->\r\n      <div style=\"position:absolute; left:0px; top:{legendheight*4+57}px; width: 180px; height: 100px\">\r\n        <Arrow height=\"43\" arrowhead=\"\" dasharray=\"3 2\"/>\r\n        <Checkbox color=\"{colors[1]}\" bind:checked={checked[1]}/>\r\n        <div class=\"legend\" style=\"position:absolute;\">\r\n          <div class=\"legendtitle\">В больнице</div>\r\n          <div style=\"padding-top: 3px; padding-bottom: 1px\">\r\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:3px; color:#CCC\">∑</span> <i>{formatNumber(Math.round(N*(Iters[active_][5]+Iters[active_][6]) ))} \r\n                                  ({ (100*(Iters[active_][5]+Iters[active_][6])).toFixed(2) }%)</div>\r\n          </div>\r\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:2px; color:#CCC\">Δ</span> <i>{formatNumber(Math.round(N*(get_d(active_)[5]+get_d(active_)[6]))) } / день</i>\r\n                                 </div>\r\n        </div>\r\n        <div class=\"legendtext\" style=\"text-align: right; width:105px; left:-111px; top: 10px; position:relative;\">Активные госпитализации</div>\r\n\r\n      </div>\r\n\r\n      <div style=\"position:absolute; left:0px; top:{legendheight*4 + 120+2}px; width: 180px; height: 100px\">\r\n        <Arrow height=\"40\" arrowhead=\"\" dasharray=\"3 2\"/>\r\n\r\n        <Checkbox color=\"{colors[0]}\" bind:checked={checked[0]}/>\r\n\r\n        <div class=\"legend\" style=\"position:absolute;\">\r\n          <div class=\"legendtitle\">Погибшие</div>\r\n          <div style=\"padding-top: 3px; padding-bottom: 1px\">          \r\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:3px; color:#CCC\">∑</span> <i>{formatNumber(Math.round(N*Iters[active_][9]))} \r\n                                  ({ (100*Iters[active_][9]).toFixed(2) }%)</div>\r\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:2px; color:#CCC\">Δ</span> <i>{formatNumber(Math.round(N*get_d(active_)[9])) } / день</i>\r\n                                 </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"legendtext\" style=\"text-align: right; width:105px; left:-111px; top: 10px; position:relative;\">Число смертей</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div style=\"flex: 0 0 890px; width:890px; height: {height+128}px; position:relative;\">\r\n\r\n    <div style=\"position:relative; top:60px; left: 10px\">\r\n      <Chart bind:checked={checked}\r\n             bind:active={active}\r\n             y = {P} \r\n             xmax = {Xmax} \r\n             total_infected = {total_infected} \r\n             deaths = {deaths} \r\n             total = {total} \r\n             timestep={timestep}\r\n             tmax={tmax}\r\n             N={N}\r\n             ymax={lock ? Plock: Pmax}\r\n             InterventionTime={InterventionTime}\r\n             colors={colors}\r\n             log={!log}/>\r\n      </div>\r\n\r\n      <div id=\"xAxisDrag\"\r\n           style=\"pointer-events: all;\r\n                  position: absolute;\r\n                  top:{height+80}px;\r\n                  left:{0}px;\r\n                  width:{780}px;\r\n                  background-color:#222;\r\n                  opacity: 0;\r\n                  height:25px;\r\n                  cursor:col-resize\">\r\n      </div>\r\n\r\n      <div id=\"yAxisDrag\"\r\n           style=\"pointer-events: all;\r\n                  position: absolute;\r\n                  top:{55}px;\r\n                  left:{0}px;\r\n                  width:{20}px;\r\n                  background-color:#222;\r\n                  opacity: 0;\r\n                  height:425px;\r\n                  cursor:row-resize\">\r\n      </div>\r\n\r\n      <!-- Intervention Line -->\r\n      <div style=\"position: absolute; width:{width+15}px; height: {height}px; position: absolute; top:100px; left:10px; pointer-events: none\">\r\n        <div class=\"dottedline\" id=\"intervention\"  style=\"pointer-events: all;\r\n                    position: absolute;\r\n                    top:-38px;\r\n                    left:{xScaleTime(InterventionTime)}px;\r\n                    visibility: {(xScaleTime(InterventionTime) < (width - padding.right)) ? 'visible':'hidden'};\r\n                    width:2px;\r\n                    background-color:#FFF;\r\n                    border-right: 1px dashed black;\r\n                    pointer-events: all;\r\n                    cursor:col-resize;\r\n                    height:{height+19}px\">\r\n\r\n\t\t\t<div style=\"position:absolute; opacity: 0.5; top:5px; left:10px; width: 120px\">\r\n\t\t\t\t<span style=\"font-size: 13px\">{@html math_inline(\"\\\\mathcal{R}_t=\" + (R0*InterventionAmt).toFixed(2) )}</span> ⟶ \r\n\t\t\t</div>\r\n\r\n\t\t\t{#if xScaleTime(InterventionTime) >= 100}\r\n\t\t\t  <div style=\"position:absolute; opacity: 0.5; top: 8px; left:-97px; width: 120px\">\r\n\t\t\t  <span style=\"font-size: 13px\">⟵ {@html math_inline(\"\\\\mathcal{R}_0=\" + (R0).toFixed(2) )}</span>\r\n\t\t\t  </div>      \r\n\t\t\t{/if}\r\n\r\n\t\t\t<div id=\"interventionDrag\" class=\"legendtext\" style=\"flex: 0 0 160px; width:80px; position:relative;  top:-70px; height: 60px; padding-right: 15px; left: -85px; pointer-events: all;cursor:col-resize;\" >\r\n\t\t\t  <div class=\"paneltitle\" style=\"top:9px; position: relative; text-align: right\">Карантин 1 день {format(\"d\")(InterventionTime)}</div>\r\n\t\t\t  <span></span><div style=\"top:9px; position: relative; text-align: right\"></div>\r\n\t\t\t  <div style=\"top:43px; left:40px; position: absolute; text-align: right; width: 20px; height:20px; opacity: 0.3\">\r\n\t\t\t\t<svg width=\"20\" height=\"20\">\r\n\t\t\t\t  <g transform=\"rotate(90)\">\r\n\t\t\t\t\t<g transform=\"translate(0,-20)\">\r\n\t\t\t\t\t  <path d=\"M2 11h16v2H2zm0-4h16v2H2zm8 11l3-3H7l3 3zm0-16L7 5h6l-3-3z\"/>\r\n\t\t\t\t\t </g>  \r\n\t\t\t\t  </g>\r\n\t\t\t\t</svg>\r\n\t\t\t  </div>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div style=\"width:150px; position:relative; top:-85px; height: 80px; padding-right: 15px; left: 0px; ;cursor:col-resize; background-color: white; position:absolute\" >\r\n\r\n\t\t\t</div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Intervention Line slider -->\r\n      <div style=\"position: absolute; width:{width+15}px; height: {height}px; position: absolute; top:120px; left:10px; pointer-events: none\">\r\n        <div style=\"\r\n            position: absolute;\r\n            top:-38px;\r\n            left:{xScaleTime(InterventionTime)}px;\r\n            visibility: {(xScaleTime(InterventionTime) < (width - padding.right)) ? 'visible':'hidden'};\r\n            width:2px;\r\n            background-color:#FFF;\r\n            border-right: 1px dashed black;\r\n            cursor:col-resize;\r\n            height:{height}px\">\r\n            <div style=\"flex: 0 0 160px; width:100px; position:relative; top:-125px; left: 1px\" >\r\n              <div class=\"caption\" style=\"pointer-events: none; position: absolute; left:0; top:40px; width:100px; border-left: 2px solid #777; padding: 5px 7px 7px 7px; \">      \r\n\t\t\t\t  <div class=\"paneltext\"  style=\"height:30px; text-align: right\">\r\n\t\t\t\t\t<div class=\"paneldesc\">Эффективность<br></div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div style=\"pointer-events: all\">\r\n\t\t\t\t\t  <div class=\"slidertext\" on:mousedown={lock_yaxis}>{(100*(1-InterventionAmt)).toFixed(1)}%</div>\r\n\t\t\t\t\t  <input class=\"range\" type=range bind:value={OMInterventionAmt} min=0 max=1 step=0.01 on:mousedown={lock_yaxis}>\r\n\t\t\t\t  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </div>\r\n\t  \r\n\t  <!-- Intervention Line 1 -->\r\n      <div style=\"position: absolute; width:{width+15}px; height: {height}px; position: absolute; top:100px; left:10px; pointer-events: none\">\r\n        <div class=\"dottedline\" id=\"intervention1\"  style=\"pointer-events: all;\r\n                    position: absolute;\r\n                    top:-38px;\r\n                    left:{xScaleTime(InterventionTime1)}px;\r\n                    visibility: {(xScaleTime(InterventionTime1) < (width - padding.right)) ? 'visible':'hidden'};\r\n                    width:2px;\r\n                    background-color:#FFF;\r\n                    border-right: 1px dashed black;\r\n                    pointer-events: all;\r\n                    cursor:col-resize;\r\n                    height:{height+19}px\">\r\n\r\n\t\t\t<div style=\"position:absolute; opacity: 0.5; top: 5px; left:10px; width: 120px\">\r\n\t\t\t\t<span style=\"font-size: 13px\">{@html math_inline(\"\\\\mathcal{R}_t=\" + (R0*InterventionAmt1).toFixed(2) )}</span> ⟶ \r\n\t\t\t</div>\r\n\r\n\t\t\t<div id=\"interventionDrag1\" class=\"legendtext\" style=\"flex: 0 0 160px; width:80px; position:relative;  top:-70px; height: 60px; padding-right: 15px; left: -85px; pointer-events: all;cursor:col-resize;\" >\r\n\t\t\t  <div class=\"paneltitle\" style=\"top:9px; position: relative; text-align: right\">Карантин 2 день {format(\"d\")(InterventionTime1)}</div>\r\n\t\t\t  <span></span><div style=\"top:9px; position: relative; text-align: right\"></div>\r\n\t\t\t  <div style=\"top:43px; left:40px; position: absolute; text-align: right; width: 20px; height:20px; opacity: 0.3\">\r\n\t\t\t\t<svg width=\"20\" height=\"20\">\r\n\t\t\t\t  <g transform=\"rotate(90)\">\r\n\t\t\t\t\t<g transform=\"translate(0,-20)\">\r\n\t\t\t\t\t  <path d=\"M2 11h16v2H2zm0-4h16v2H2zm8 11l3-3H7l3 3zm0-16L7 5h6l-3-3z\"/>\r\n\t\t\t\t\t </g>  \r\n\t\t\t\t  </g>\r\n\t\t\t\t</svg>\r\n\t\t\t  </div>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div style=\"width:150px; position:relative; top:-85px; height: 80px; padding-right: 15px; left: 0px; ;cursor:col-resize; background-color: white; position:absolute\" >\r\n\r\n\t\t\t</div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Intervention Line slider 1 -->\r\n      <div style=\"position: absolute; width:{width+15}px; height: {height}px; position: absolute; top:120px; left:10px; pointer-events: none\">\r\n        <div style=\"\r\n            position: absolute;\r\n            top:-38px;\r\n            left:{xScaleTime(InterventionTime1)}px;\r\n            visibility: {(xScaleTime(InterventionTime1) < (width - padding.right)) ? 'visible':'hidden'};\r\n            width:2px;\r\n            background-color:#FFF;\r\n            border-right: 1px dashed black;\r\n            cursor:col-resize;\r\n            height:{height}px\">\r\n            <div style=\"flex: 0 0 160px; width:100px; position:relative; top:-125px; left: 1px\" >\r\n              <div class=\"caption\" style=\"pointer-events: none; position: absolute; left:0; top:40px; width:100px; border-left: 2px solid #777; padding: 5px 7px 7px 7px; \">      \r\n\t\t\t\t  <div class=\"paneltext\"  style=\"height:30px; text-align: right\">\r\n\t\t\t\t\t<div class=\"paneldesc\">Эффективность<br></div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div style=\"pointer-events: all\">\r\n\t\t\t\t\t  <div class=\"slidertext\" on:mousedown={lock_yaxis}>{(100*(1-InterventionAmt1)).toFixed(1)}%</div>\r\n\t\t\t\t\t  <input class=\"range\" type=range bind:value={OMInterventionAmt1} min=0 max=1 step=0.01 on:mousedown={lock_yaxis}>\r\n\t\t\t\t  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </div>\r\n\t  \r\n\t  <!-- Intervention Line 2 -->\r\n      <div style=\"position: absolute; width:{width+15}px; height: {height}px; position: absolute; top:100px; left:10px; pointer-events: none\">\r\n        <div class=\"dottedline\" id=\"intervention2\"  style=\"pointer-events: all;\r\n                    position: absolute;\r\n                    top:-38px;\r\n                    left:{xScaleTime(InterventionTime2)}px;\r\n                    visibility: {(xScaleTime(InterventionTime2) < (width - padding.right)) ? 'visible':'hidden'};\r\n                    width:2px;\r\n                    background-color:#FFF;\r\n                    border-right: 1px dashed black;\r\n                    pointer-events: all;\r\n                    cursor:col-resize;\r\n                    height:{height+19}px\">\r\n\r\n\t\t\t<div style=\"position:absolute; opacity: 0.5; top: 5px; left:10px; width: 120px\">\r\n\t\t\t\t<span style=\"font-size: 13px\">{@html math_inline(\"\\\\mathcal{R}_t=\" + (R0*InterventionAmt2).toFixed(2) )}</span> ⟶ \r\n\t\t\t</div>\r\n\r\n\t\t\t<div id=\"interventionDrag2\" class=\"legendtext\" style=\"flex: 0 0 160px; width:80px; position:relative;  top:-70px; height: 60px; padding-right: 15px; left: -85px; pointer-events: all;cursor:col-resize;\" >\r\n\t\t\t  <div class=\"paneltitle\" style=\"top:9px; position: relative; text-align: right\">Карантин 3 день {format(\"d\")(InterventionTime2)}</div>\r\n\t\t\t  <span></span><div style=\"top:9px; position: relative; text-align: right\"></div>\r\n\t\t\t  <div style=\"top:43px; left:40px; position: absolute; text-align: right; width: 20px; height:20px; opacity: 0.3\">\r\n\t\t\t\t<svg width=\"20\" height=\"20\">\r\n\t\t\t\t  <g transform=\"rotate(90)\">\r\n\t\t\t\t\t<g transform=\"translate(0,-20)\">\r\n\t\t\t\t\t  <path d=\"M2 11h16v2H2zm0-4h16v2H2zm8 11l3-3H7l3 3zm0-16L7 5h6l-3-3z\"/>\r\n\t\t\t\t\t </g>  \r\n\t\t\t\t  </g>\r\n\t\t\t\t</svg>\r\n\t\t\t  </div>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div style=\"width:150px; position:relative; top:-85px; height: 80px; padding-right: 15px; left: 0px; ;cursor:col-resize; background-color: white; position:absolute\" >\r\n\r\n\t\t\t</div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Intervention Line slider 2 -->\r\n      <div style=\"position: absolute; width:{width+15}px; height: {height}px; position: absolute; top:120px; left:10px; pointer-events: none\">\r\n        <div style=\"\r\n            position: absolute;\r\n            top:-38px;\r\n            left:{xScaleTime(InterventionTime2)}px;\r\n            visibility: {(xScaleTime(InterventionTime2) < (width - padding.right)) ? 'visible':'hidden'};\r\n            width:2px;\r\n            background-color:#FFF;\r\n            border-right: 1px dashed black;\r\n            cursor:col-resize;\r\n            height:{height}px\">\r\n            <div style=\"flex: 0 0 160px; width:100px; position:relative; top:-125px; left: 1px\" >\r\n              <div class=\"caption\" style=\"pointer-events: none; position: absolute; left:0; top:40px; width:100px; border-left: 2px solid #777; padding: 5px 7px 7px 7px; \">      \r\n\t\t\t\t  <div class=\"paneltext\"  style=\"height:30px; text-align: right\">\r\n\t\t\t\t\t<div class=\"paneldesc\">Эффективность<br></div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div style=\"pointer-events: all\">\r\n\t\t\t\t\t  <div class=\"slidertext\" on:mousedown={lock_yaxis}>{(100*(1-InterventionAmt2)).toFixed(1)}%</div>\r\n\t\t\t\t\t  <input class=\"range\" type=range bind:value={OMInterventionAmt2} min=0 max=1 step=0.01 on:mousedown={lock_yaxis}>\r\n\t\t\t\t  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </div>\r\n\r\n<!-- \r\n      {#if xScaleTime(InterventionTime+duration) < (width - padding.right)}\r\n        <div id=\"dottedline2\" style=\"position: absolute; width:{width+15}px; height: {height}px; position: absolute; top:105px; left:10px; pointer-events: none;\">\r\n          <div style=\"\r\n              position: absolute;\r\n              top:-38px;\r\n              left:{xScaleTime(InterventionTime+duration)}px;\r\n              visibility: {(xScaleTime(InterventionTime+duration) < (width - padding.right)) ? 'visible':'hidden'};\r\n              width:3px;\r\n              background-color:white;\r\n              border-right: 1px dashed black;\r\n              cursor:col-resize;\r\n              opacity: 0.3;\r\n              pointer-events: all;\r\n              height:{height+13}px\">\r\n            <div style=\"position:absolute; opacity: 0.5; top:-10px; left:10px; width: 120px\">\r\n            <span style=\"font-size: 13px\">{@html math_inline(\"\\\\mathcal{R}_t=\" + (R0*InterventionAmt).toFixed(2) )}</span> ⟶ \r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div style=\"position: absolute; width:{width+15}px; height: {height}px; position: absolute; top:120px; left:10px; pointer-events: none\">\r\n          <div style=\"\r\n              opacity: 0.5;\r\n              position: absolute;\r\n              top:-38px;\r\n              left:{xScaleTime(InterventionTime+duration)}px;\r\n              visibility: {(xScaleTime(InterventionTime+duration) < (width - padding.right)) ? 'visible':'hidden'};\r\n              width:2px;\r\n              background-color:#FFF;\r\n              cursor:col-resize;\r\n              height:{height}px\">\r\n              <div style=\"flex: 0 0 160px; width:200px; position:relative; top:-125px; left: 1px\" >\r\n                <div class=\"caption\" style=\"pointer-events: none; position: absolute; left:0; top:40px; width:150px; border-left: 2px solid #777; padding: 5px 7px 7px 7px; \">      \r\n                <div class=\"paneltext\"  style=\"height:20px; text-align: right\">\r\n                <div class=\"paneldesc\">decrease transmission by<br></div>\r\n                </div>\r\n                <div style=\"pointer-events: all\">\r\n                <div class=\"slidertext\" on:mousedown={lock_yaxis}>{(InterventionAmt).toFixed(2)}</div>\r\n                <input class=\"range\" type=range bind:value={InterventionAmt} min=0 max=1 step=0.01 on:mousedown={lock_yaxis}>\r\n                </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n      {/if} -->\r\n\r\n\r\n      <div style=\"pointer-events: none;\r\n                  position: absolute;\r\n                  top:{height+84}px;\r\n                  left:{0}px;\r\n                  width:{780}px;\r\n                  opacity: 1.0;\r\n                  height:25px;\r\n                  cursor:col-resize\">\r\n            {#each milestones as milestone}\r\n              <div style=\"position:absolute; left: {xScaleTime(milestone[0])+8}px; top: -30px;\">\r\n                <span style=\"opacity: 0.3\"><Arrow height=30 arrowhead=\"#circle\" dasharray = \"2 1\"/></span>\r\n                  <div class=\"tick\" style=\"position: relative; left: 0px; top: 35px; max-width: 130px; color: #BBB; background-color: white; padding-left: 4px; padding-right: 4px\">{@html milestone[1]}</div>\r\n              </div>\r\n            {/each}\r\n      </div>\r\n    \r\n    <div style=\"opacity:{xScaleTime(InterventionTime) >= 192? 1.0 : 0.2}\">\r\n      <div class=\"tick\" style=\"color: #AAA; position:absolute; pointer-events:all; left:10px; top: 10px\">\r\n        <Checkbox color=\"#CCC\" bind:checked={log}/><div style=\"position: relative; top: 4px; left:20px; width: 50px;\">линейный масштаб</div>\r\n      </div>\r\n    </div>\r\n\r\n   </div>\r\n\r\n</div>\r\n\r\n\r\n<div style=\"height:220px;\">\r\n  <div class=\"minorTitle\">\r\n    <div style=\"margin: 0px 0px 5px 4px\" class=\"minorTitleColumn\">Динамика распространения</div>\r\n    <div style=\"flex: 0 0 20; width:20px\"></div>\r\n    <div style=\"margin: 0px 4px 5px 0px\" class=\"minorTitleColumn\">Клиническая динамика</div>\r\n  </div>\r\n  <div class = \"row\">\r\n\r\n    <div class=\"column\">\r\n      <div class=\"paneltitle\">Данные населеннности</div>\r\n      <div class=\"paneldesc\" style=\"height:30px\">Размер популяции<br></div>\r\n      <div class=\"slidertext\">{format(\",\")(Math.round(N))}</div>\r\n      <input class=\"range\" style=\"margin-bottom: 8px\"type=range bind:value={logN} min={5} max=25 step=0.01>\r\n      <div class=\"paneldesc\" style=\"height:29px; border-top: 1px solid #EEE; padding-top: 10px\">Стартовое число заразных<br></div>\r\n      <div class=\"slidertext\">{I0}</div>\r\n      <input class=\"range\" type=range bind:value={I0} min={1} max=10000 step=1>\r\n    </div>\r\n\r\n    <div class=\"column\">\r\n      <div class=\"paneltext\">\r\n      <div class=\"paneltitle\">Basic Reproduction Number (Заразность) {@html math_inline(\"\\\\mathcal{R}_0\")} </div>\r\n      <div class=\"paneldesc\">Число людей, которых заражает один заразный<br></div>\r\n      </div>\r\n      <div class=\"slidertext\">{R0}</div>\r\n      <input class=\"range\" type=range bind:value={R0} min=0.01 max=10 step=0.01> \r\n    </div> \r\n\r\n    <div class=\"column\">\r\n      <div class=\"paneltitle\">Сроки распространения</div>\r\n      <div class=\"paneldesc\" style=\"height:30px\">Инкубационный период, {@html math_inline(\"T_{\\\\text{inc}}\")}.<br></div>\r\n      <div class=\"slidertext\">{(D_incbation).toFixed(2)} дней</div>\r\n      <input class=\"range\" style=\"margin-bottom: 8px\"type=range bind:value={D_incbation} min={0.15} max=24 step=0.0001>\r\n      <div class=\"paneldesc\" style=\"height:29px; border-top: 1px solid #EEE; padding-top: 10px\">Период заразности, {@html math_inline(\"T_{\\\\text{inf}}\")}.<br></div>\r\n      <div class=\"slidertext\">{D_infectious} дней</div>\r\n      <input class=\"range\" type=range bind:value={D_infectious} min={0} max=24 step=0.01>\r\n    </div>\r\n\r\n    <div style=\"flex: 0 0 20; width:20px\"></div>\r\n\r\n    <div class=\"column\">\r\n      <div class=\"paneltitle\">Статистика смертности</div>\r\n      <div class=\"paneldesc\" style=\"height:30px\">Доля смертельных случаев<br></div>\r\n      <div class=\"slidertext\">{(CFR*100).toFixed(2)} %</div>\r\n      <input class=\"range\" style=\"margin-bottom: 8px\" type=range bind:value={CFR} min={0} max=1 step=0.0001>\r\n      <div class=\"paneldesc\" style=\"height:29px; border-top: 1px solid #EEE; padding-top: 10px\">Время от заболевания до смерти<br></div>\r\n      <div class=\"slidertext\">{Time_to_death} дней</div>\r\n      <input class=\"range\" type=range bind:value={Time_to_death} min={(D_infectious)+0.1} max=100 step=0.01>\r\n    </div>\r\n\r\n    <div class=\"column\">\r\n      <div class=\"paneltitle\">Выздоровление</div>\r\n      <div class=\"paneldesc\" style=\"height:30px\">Длительность госпитализации<br></div>\r\n      <div class=\"slidertext\">{D_recovery_severe} дней</div>\r\n      <input class=\"range\" style=\"margin-bottom: 8px\" type=range bind:value={D_recovery_severe} min={0.1} max=100 step=0.01>\r\n      <div class=\"paneldesc\" style=\"height:29px; border-top: 1px solid #EEE; padding-top: 10px\">Время восстановления легких случаев<br></div>\r\n      <div class=\"slidertext\">{D_recovery_mild} дней</div>\r\n      <input class=\"range\" type=range bind:value={D_recovery_mild} min={0.5} max=100 step=0.01>\r\n    </div>\r\n\r\n    <div class=\"column\">\r\n      <div class=\"paneltitle\">Статистика госпитализации</div>\r\n      <div class=\"paneldesc\" style=\"height:30px\">Доля госпитализаций<br></div>\r\n      <div class=\"slidertext\">{(P_SEVERE*100).toFixed(2)} %</div>\r\n      <input class=\"range\" style=\"margin-bottom: 8px\"type=range bind:value={P_SEVERE} min={0} max=1 step=0.0001>      \r\n      <div class=\"paneldesc\" style=\"height:29px; border-top: 1px solid #EEE; padding-top: 10px\">Время госпитализации<br></div>\r\n      <div class=\"slidertext\">{D_hospital_lag} дней</div>\r\n      <input class=\"range\" type=range bind:value={D_hospital_lag} min={0.5} max=100 step=0.01>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n\r\n<div style=\"position: relative; height: 12px\"></div>\r\n\r\n<p class = \"center\">\r\n\tКалькулятор реализовал Gabriel Goh, он занимается исследованиями в области машинного обучения, его <a href=\"http://gabgoh.github.io/\">сайт</a>. Исходный код оригинальной версии калькулятора <a href=\"https://github.com/gabgoh/epcalc\">здесь</a>. Данный калькулятор реализован на основе модели <a href=\"https://en.wikipedia.org/wiki/Compartmental_models_in_epidemiology#The_SEIR_model\">SEIR (Susceptible → Exposed → Infected → Removed)</a>. В этой модели предполагается, что инфицированные люди после болезни приобретают иммунитет.\r\n</p>\r\n\r\n<p class = \"center\">\r\n\tМеня зовут Михаил, я перевел калькулятор на русский язык, и немного расширил функционал. Вопросы <a href=\"https://facebook.com/goldenalfer\">сюда</a>. Исходный код моей версии калькулятора <a href=\"https://github.com/goldenalfer/epcalc\">здесь</a>.\r\n</p>\r\n\r\n<p class = \"center\">С помощью данного калькулятор можно смоделировать распространение вируса COVID-19 с учетом введения карантина, а также изменения условий карантина.</p>\r\n\r\n<p class = \"center\">\r\n\t<b> Acknowledgements </b><br>\r\n\t<a href = \"https://enkimute.github.io/\">Steven De Keninck</a> for RK4 Integrator. <a href=\"https://twitter.com/ch402\">Chris Olah</a>, <a href=\"https://twitter.com/shancarter\">Shan Carter\r\n\t</a> and <a href=\"https://twitter.com/ludwigschubert\">Ludwig Schubert\r\n\t</a> wonderful feedback. <a href=\"https://twitter.com/NikitaJer\">Nikita Jerschov</a> for improving clarity of text. Charie Huang for context and discussion.\r\n</p>\r\n\r\n<!-- Input data -->\r\n<div style=\"margin-bottom: 30px\">\r\n\r\n  <div class=\"center\" style=\"padding: 10px; margin-top: 3px; width: 925px\">\r\n    <div class=\"legendtext\">Ссылка на калькулятор с вашими параметрами:</div>\r\n    <form>\r\n      <textarea type=\"textarea\" rows=\"1\" cols=\"5000\" style=\"white-space: nowrap;  overflow: auto; width:100%; text-align: left\" id=\"fname\" name=\"fname\">{state}</textarea>\r\n    </form>\r\n  </div>\r\n</div>\r\n",
    "<script>\r\n  import { scaleLinear, scaleLog } from 'd3-scale';\r\n  import { drag } from 'd3-drag';\r\n  import { selectAll } from 'd3-selection'\r\n  import { onMount } from 'svelte';\r\n  import { createEventDispatcher } from 'svelte';\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  function range(n){\r\n    return Array(n).fill().map((_, i) => i);\r\n  }\r\n\r\n  $: showTip = function (i) {\r\n    active_hover = i\r\n  }\r\n\r\n  function formatNumber(num) {\r\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n  }\r\n\r\n  var sum = function(arr, bools){\r\n    var x = 0\r\n    for (var i = 0; i < arr.length; i++) {\r\n      x = x + arr[i]*(bools[i] ? 1 : 0)\r\n    }\r\n    return x\r\n  }\r\n\r\n  export let y;\r\n  export let tmax;\r\n  export let xmax; \r\n  export let deaths;\r\n  export let total;\r\n  export let vline;\r\n  export let timestep;\r\n  export let total_infected;\r\n  export let N;\r\n  export let ymax;\r\n  export let InterventionTime;\r\n  export let colors; \r\n  export let log = false;\r\n\r\n  const padding = { top: 20, right: 0, bottom: 20, left: 25 };\r\n\r\n  let width  = 750;\r\n  let height = 420;\r\n\r\n  $: xScale = scaleLinear()\r\n    .domain([0, y.length])\r\n    .range([padding.left, width - padding.right]);\r\n\r\n  $: xScaleTime = scaleLinear()\r\n    .domain([0, tmax])\r\n    .range([padding.left, width - padding.right]);\r\n\r\n  $: indexToTime = scaleLinear()\r\n    .domain([0, y.length])\r\n    .range([0, tmax])\r\n\r\n  $: timeToIndex = scaleLinear()\r\n    .domain([0, tmax])\r\n    .range([0, y.length])\r\n\r\n  $: yScale = (log ? scaleLog(): scaleLinear())\r\n    .domain([log ? 1: 0,  ymax/1])\r\n    .range([height - padding.bottom, padding.top]);\r\n\r\n  $: yScaleL = scaleLog()\r\n    .domain([1,  ymax/1])\r\n    .range([0, height - padding.bottom - padding.top]);\r\n\r\n\r\n  $: innerWidth = width - (padding.left + padding.right);\r\n  $: barWidth = innerWidth / y.length - 1.5;\r\n  $: active_hover = -1\r\n  $: lock = false\r\n  var active_lock = 0\r\n\r\n  $: active = (function () {\r\n    if (lock){\r\n      var i = Math.round(timeToIndex(active_lock))\r\n      if (i > 99) {\r\n        lock = false\r\n        i = 0\r\n      } else {\r\n        return i\r\n      }\r\n    } else {\r\n      return active_hover\r\n    }\r\n  })()\r\n  export let active;\r\n  export let checked;\r\n\r\n  // var data = [[2   , 2  ], [5   , 2  ], [18  , 4  ], [28  , 6  ], [43  , 8  ], [61  , 12 ], [95  , 16 ], [139 , 19 ], [245 , 26 ], [388 , 34 ], [593 , 43 ], [978 , 54 ], [1501, 66 ], [2336, 77 ], [2922, 92 ], [3513, 107], [4747, 124]]\r\n  var data = []\r\n</script>\r\n\r\n<style>\r\n  h2 {\r\n    text-align: center;\r\n    font-size: 30px;\r\n    font-weight: 300;\r\n    font-family: nyt-franklin,arial,helvetica,sans-serif;\r\n    font-style: normal; \r\n  }\r\n\r\n  .chart {\r\n    width: 100%;\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n    padding-top:30px;\r\n    padding-bottom:10px;\r\n  }\r\n\r\n  svg {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 450px;\r\n  }\r\n\r\n  .tick {\r\n    font-family: Helvetica, Arial;\r\n    font-size: .725em;\r\n    font-weight: 200;\r\n  }\r\n\r\n  .tick line {\r\n    stroke: #e2e2e2;\r\n    stroke-dasharray: 2;\r\n  }\r\n\r\n  .tick text {\r\n    fill: #aaa;\r\n    text-anchor: start;\r\n  }\r\n\r\n  .tick.tick-0 line {\r\n    stroke-dasharray: 0;\r\n  }\r\n\r\n  .intervention line {\r\n    stroke: #555;\r\n    stroke-dasharray: 0;\r\n    stroke-width:12.5;\r\n  }\r\n\r\n\r\n  .x-axis .tick text {\r\n    text-anchor: middle;\r\n  }\r\n\r\n  .bar {\r\n    stroke: none;\r\n    opacity: 0.65\r\n  }\r\n\r\n  .total {\r\n    color: #888;\r\n    font-family: Helvetica, Arial;\r\n    font-size: .725em;\r\n    font-weight: 200;\r\n  }\r\n\r\n\r\n  a.tip span:before{\r\n      content:'';\r\n      display:block;\r\n      width:0;\r\n      height:0;\r\n      position:absolute;\r\n\r\n      border-top: 8px solid transparent;\r\n      border-bottom: 8px solid transparent;\r\n      border-right:8px solid black;\r\n      left:-8px;\r\n\r\n      top:7px;\r\n  }\r\n\r\n</style>\r\n\r\n<div style=\"width:{width+15}px; height: {height}px; position: relative; top:20px\">\r\n  <svg style=\"position:absolute; height: {height}px\">\r\n\r\n    <!-- y axis -->\r\n    <g class=\"axis y-axis\" transform=\"translate(0,{padding.top})\">\r\n      {#each yScale.ticks(5) as tick}\r\n        <g class=\"tick tick-{tick}\" transform=\"translate(0, {yScale(tick) - padding.bottom})\">\r\n          <line x2=\"100%\"></line>\r\n          <text y=\"-4\">{Number.isInteger(Math.log10(tick)) ? formatNumber(tick) : (log ? \"\": formatNumber(tick))}{ (tick == yScale.ticks(5)[0]) ? \" \": \"\"}</text>\r\n        </g>\r\n      {/each}\r\n    </g>\r\n\r\n    <!-- x axis -->\r\n    <g class=\"axis x-axis\">\r\n      {#each xScaleTime.ticks() as i}\r\n        <g class=\"tick\" transform=\"translate({xScaleTime(i)},{height})\">\r\n          <text x=\"0\" y=\"-4\">{i == 0 ? \"Day \":\"\"}{i}</text>\r\n        </g>\r\n      {/each}\r\n    </g>\r\n\r\n    <g class='bars'>\r\n      {#each range(y.length) as i}\r\n        <rect\r\n          on:mouseover={() => showTip(i)}\r\n          on:mouseout={() => showTip(-1)}\r\n          on:click={() => {lock = !lock; active_lock = indexToTime(i) }}\r\n          class=\"bar\"\r\n          x=\"{xScale(i) + 2}\"\r\n          y=\"{0}\"\r\n          width=\"{barWidth+3}\"\r\n          height=\"{height}\"\r\n          style=\"fill:white; opacity: 0\">     \r\n        </rect>\r\n\r\n        {#each range(colors.length) as j}\r\n          {#if !log}\r\n              <rect\r\n                on:mouseover={() => showTip(i)}\r\n                on:mouseout={() => showTip(-1)}\r\n                on:click={() => {lock = !lock; active_lock = indexToTime(i) }}\r\n                class=\"bar\"\r\n                x=\"{xScale(i) + 2}\"\r\n                y=\"{yScale( sum(y[i].slice(0,j+1), checked) )}\"\r\n                width=\"{barWidth}\"\r\n                height=\"{Math.max(height - padding.bottom - yScale(y[i][j]*checked[j] ),0)}\" \r\n                style=\"fill:{colors[j]};\r\n                       opacity:{active == i ? 0.9: 0.6}\">     \r\n              </rect>\r\n          {:else}\r\n              <rect\r\n                on:mouseover={() => showTip(i)}\r\n                on:mouseout={() => showTip(-1)}\r\n                on:click={() => {lock = !lock; active_lock = indexToTime(i) }}\r\n                class=\"bar\"\r\n                x=\"{xScale(i) + 2}\"\r\n                y=\"{(function () { \r\n                        var z = yScale( sum(y[i].slice(0,j+1), checked) ); \r\n                        return Math.min(isNaN(z) ? 0: z, height - padding.top)\r\n                      })()  \r\n                    }\"\r\n                width=\"{barWidth}\"\r\n                height=\"{(function () {\r\n                  var top = yScaleL( sum(y[i].slice(0,j+1),checked) + 0.0001 )\r\n                  var btm = yScaleL( sum(y[i].slice(0,j),checked) + 0.0001)\r\n                  var z = top - btm; \r\n                  if (z + yScale( sum(y[i].slice(0,j+1), checked) ) > height - padding.top) {\r\n                    return top\r\n                  } else {\r\n                    return Math.max(isNaN(z) ? 0 : z,0)\r\n                  }})()}\" \r\n                style=\"fill:{colors[j]};\r\n                       opacity:{active == i ? 0.9: 0.6}\">     \r\n              </rect>\r\n          {/if}\r\n        {/each}\r\n\r\n      {/each}\r\n    </g>\r\n\r\n<!-- height=\"{Math.max(height - padding.bottom - yScale(y[i][j]*checked[j] ),0)}\" -->\r\n\r\n    <g class='bars'>\r\n      {#each range(data.length) as i}\r\n        <rect\r\n          class=\"bar\"\r\n          x=\"{xScale( i+28 ) + 2}\"\r\n          y=\"{yScale( data[i][1] )}\"\r\n          width=\"{barWidth}\"\r\n          height=\"{height - padding.bottom - yScale( data[i][1] )}\"\r\n          style=\"fill:black; \r\n                 opacity: 0.5;\r\n                 box-shadow: 4px 10px 5px 2px rgba(0,0,0,0.75);\">     \r\n        </rect>\r\n      {/each}\r\n    </g>\r\n\r\n  </svg> \r\n\r\n  <div style=\"position: absolute;width:{width+15}px; height: {height}px; position: absolute; top:0px; left:0px; pointer-events: none\">\r\n    \r\n    {#if active >= 0}\r\n      <div style=\"position:absolute; \r\n                  pointer-events: none;\r\n                  width:100px;\r\n                  left:{xScale(active)}px;\r\n                  top:{Math.max(yScale(sum(y[active], checked)),0) }px\" class=\"tip\"> \r\n          <!-- {#if lock} <div style=\"position:absolute; top:-35px; left:-3.5px; font-family: Source Code Pro\">🔒</div> {/if} -->\r\n          <svg style=\"position:absolute; top:-12px; left:0px\" height=\"10\" width=\"10\">\r\n          <path \r\n            d=\"M 0 0 L 10 0 L 5 10 z\"\r\n            fill=\"{lock ? '#555':'#AAA'}\" \r\n            stroke-width=\"3\" />\r\n          </svg>\r\n      </div>\r\n    {/if}\r\n\r\n  </div>\r\n\r\n</div>\r\n"
  ],
  "names": [],
  "mappings": "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"
}